(translationUnit (declaration (functionDeclaration (typeSpecifier (integerTypeSpecifier int)) main ( ) (block { (statement (variableDeclarator (typeSpecifier (integerTypeSpecifier int)) (variableDeclaration i = (constExpression (literals (integerLiteral 0)))) , (variableDeclaration j = (constExpression (literals (integerLiteral 0)))) ;)) (statement (arrayDeclarator (typeSpecifier (charTypeSpecifier char)) m [ 100 ] ;)) (statement (expression (functionCall scanf ( (expression (literals (stringLiteral "%s"))) , (expression & (leftExpression m)) ))) ;) (statement (whileStatement while ( (expression m [ (expression i) ]) ) (statement (expression (leftExpression i) ++) ;))) (statement (expression (leftExpression i) --) ;) (statement (whileStatement while ( (expression (expression j) < (expression i)) ) (statement (block { (statement (ifStatement if ( (expression (expression m [ (expression j) ]) != (expression m [ (expression i) ])) ) (statement (block { (statement (expression (functionCall printf ( (expression (literals (stringLiteral "False"))) ))) ;) (statement (returnStatement return (expression (literals (integerLiteral 0))) ;)) })))) (statement (expression (leftExpression i) --) ;) (statement (expression (leftExpression j) ++) ;) })))) (statement (expression (functionCall printf ( (expression (literals (stringLiteral "True"))) ))) ;) (statement (returnStatement return (expression (literals (integerLiteral 0))) ;)) }))) <EOF>)